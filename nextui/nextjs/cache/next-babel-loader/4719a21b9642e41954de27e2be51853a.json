{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\n\nvar Movie = /*#__PURE__*/function (_Component) {\n  _inherits(Movie, _Component);\n\n  var _super = _createSuper(Movie);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setupBeforeUnloadListener\", function () {\n      window.addEventListener(\"beforeunload\", function (ev) {\n        ev.preventDefault();\n        return ev.returnValue = \"Are you sure you want to close ?\";\n      });\n    });\n\n    _this.state = {\n      title: \"\",\n      titleImage: \"\",\n      year: \"2020-05\",\n      genre: \"\",\n      rating: 5,\n      scriptRating: 5,\n      directionRating: 5,\n      dialoguesRating: 5,\n      cinematographyRating: 5,\n      editingRating: 5,\n      musicRating: 5,\n      actingRating: 5,\n      synopsis: \"\",\n      pros: \"\",\n      cons: \"\",\n      language: \"\",\n      cast: \"\",\n      ticketImage: \"\",\n      watchDate: \"2020-05-19\",\n      placeWatched: \"\",\n      userId: \"\",\n      password: \"\",\n      trailer: \"\"\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Activate the event listener\n      this.setupBeforeUnloadListener();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(evt) {\n      var data = {\n        title: this.state.title,\n        titleImage: this.state.titleImage,\n        year: this.state.year.substr(0, 4),\n        language: this.state.language,\n        genre: this.state.genre.split(\",\"),\n        rating: this.state.rating,\n        scriptRating: this.state.scriptRating,\n        directionRating: this.state.directionRating,\n        dialoguesRating: this.state.dialoguesRating,\n        cinematographyRating: this.state.cinematographyRating,\n        editingRating: this.state.editingRating,\n        musicRating: this.state.musicRating,\n        actingRating: this.state.actingRating,\n        trailer: this.state.trailer,\n        review: {\n          synopsis: this.state.synopsis,\n          pros: this.state.pros.split(\"\\n\"),\n          cons: this.state.cons.split(\"\\n\")\n        },\n        cast: this.state.cast.split(\"\\n\"),\n        ticketDetails: {\n          ticketImage: this.state.ticketImage,\n          watchDate: this.state.watchDate,\n          placeWatched: this.state.placeWatched\n        },\n        userId: this.state.userId,\n        password: this.state.password\n      };\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      var proxyUrl = 'https://fierce-chamber-21718.herokuapp.com/';\n      var url = 'https://api.popcorntales.com/movie';\n      fetch(proxyUrl + url, requestOptions).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        alert(data.message);\n        console.log(data);\n      })[\"catch\"](function (error) {\n        alert(error);\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"h3\", null, \"Add Review\"), __jsx(FormControl, {\n        component: \"fieldset\",\n        className: \"container\"\n      }, __jsx(FormGroup, null, __jsx(TextField, {\n        className: \"smallField\",\n        type: \"text\",\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            title: e.target.value\n          });\n        },\n        label: \"Title\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"mediumField\",\n        type: \"text\",\n        value: this.state.titleImage,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            titleImage: e.target.value\n          });\n        },\n        label: \"Title Image\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"mediumField\",\n        type: \"text\",\n        value: this.state.language,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            language: e.target.value\n          });\n        },\n        label: \"Language\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"month\",\n        value: this.state.year,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            year: e.target.value\n          });\n        },\n        label: \"Year\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"text\",\n        value: this.state.genre,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            genre: e.target.value\n          });\n        },\n        label: \"Genre\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.rating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            rating: e.target.value\n          });\n        },\n        label: \"Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.scriptRating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            scriptRating: e.target.value\n          });\n        },\n        label: \"Script Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.directionRating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            directionRating: e.target.value\n          });\n        },\n        label: \"Direction Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.dialoguesRating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            dialoguesRating: e.target.value\n          });\n        },\n        label: \"Dialogues Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.cinematographyRating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cinematographyRating: e.target.value\n          });\n        },\n        label: \"Cinematography Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.editingRating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            editingRating: e.target.value\n          });\n        },\n        label: \"Editing Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.musicRating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            musicRating: e.target.value\n          });\n        },\n        label: \"Music Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"number\",\n        value: this.state.actingRating,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            actingRating: e.target.value\n          });\n        },\n        label: \"Acting Rating\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"mediumField\",\n        type: \"text\",\n        value: this.state.trailer,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            trailer: e.target.value\n          });\n        },\n        label: \"Trailer\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextareaAutosize, {\n        \"aria-label\": \"Synopsis\",\n        rowsMin: 3,\n        placeholder: \"Synopsis\",\n        value: this.state.synopsis,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            synopsis: e.target.value\n          });\n        },\n        className: \"textArea\"\n      }), __jsx(TextareaAutosize, {\n        \"aria-label\": \"Pros\",\n        rowsMin: 3,\n        placeholder: \"Pros\",\n        value: this.state.pros,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            pros: e.target.value\n          });\n        },\n        className: \"textArea\"\n      }), __jsx(TextareaAutosize, {\n        \"aria-label\": \"Cons\",\n        rowsMin: 3,\n        placeholder: \"Cons\",\n        value: this.state.cons,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cons: e.target.value\n          });\n        },\n        className: \"textArea\"\n      }), __jsx(TextareaAutosize, {\n        \"aria-label\": \"Cast\",\n        rowsMin: 3,\n        placeholder: \"Cast\",\n        value: this.state.cast,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            cast: e.target.value\n          });\n        },\n        className: \"textArea\"\n      }), __jsx(TextField, {\n        className: \"mediumField\",\n        type: \"text\",\n        value: this.state.ticketImage,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            ticketImage: e.target.value\n          });\n        },\n        label: \"Ticket Image\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"date\",\n        value: this.state.watchDate,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            watchDate: e.target.value\n          });\n        },\n        label: \"Watch Date\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"text\",\n        value: this.state.placeWatched,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            placeWatched: e.target.value\n          });\n        },\n        label: \"Venue\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"text\",\n        value: this.state.userId,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            userId: e.target.value\n          });\n        },\n        label: \"User Id\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            password: e.target.value\n          });\n        },\n        label: \"Password\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(Button, {\n        onClick: this.onSubmit\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":null,"metadata":{},"sourceType":"module"}