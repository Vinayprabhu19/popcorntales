{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Slider from '@material-ui/core/Slider';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\n\nvar Sort = /*#__PURE__*/function (_Component) {\n  _inherits(Sort, _Component);\n\n  var _super = _createSuper(Sort);\n\n  function Sort(props) {\n    var _this;\n\n    _classCallCheck(this, Sort);\n\n    _this = _super.call(this, props);\n    var year = props.data.year;\n    var language = props.data.language;\n    var rating = props.data.rating;\n    var filter = {\n      \"year\": year,\n      \"language\": language,\n      \"rating\": rating\n    };\n    _this.state = {\n      filter: filter,\n      filterData: props.filterData\n    };\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    _this.onOK = _this.onOK.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Sort, [{\n    key: \"onCancel\",\n    value: function onCancel() {\n      debugger;\n      this.props.close(null);\n    }\n  }, {\n    key: \"onOK\",\n    value: function onOK() {\n      this.props.close(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Dialog, {\n        maxWidth: 'sm',\n        fullWidth: true,\n        onClose: function onClose(data) {\n          return _this2.props.close(data);\n        },\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        \"aria-labelledby\": \"simple-dialog-title\",\n        open: this.props.open\n      }, __jsx(DialogTitle, {\n        id: \"simple-dialog-title\"\n      }, \"Filter\"), __jsx(\"div\", {\n        className: \"filtercontainer\"\n      }, __jsx(\"h4\", {\n        className: \"item\"\n      }, \"Language\"), __jsx(Select, {\n        className: \"item\",\n        variant: \"outlined\",\n        value: this.state.filter.language,\n        onChange: function onChange(e) {\n          var filter = _this2.state.filter;\n          filter.language = e.target.value;\n\n          _this2.setState({\n            filter: filter\n          });\n        }\n      }, this.state.filterData.languages.map(function (language) {\n        return __jsx(MenuItem, {\n          value: language,\n          key: language\n        }, language);\n      })), __jsx(\"h4\", {\n        className: \"item\"\n      }, \"Year\"), __jsx(Select, {\n        className: \"item\",\n        variant: \"outlined\",\n        value: this.state.filter.year,\n        onChange: function onChange(e) {\n          var filter = _this2.state.filter;\n          filter.year = e.target.value;\n\n          _this2.setState({\n            filter: filter\n          });\n        }\n      }, this.state.filterData.years.map(function (year) {\n        return __jsx(MenuItem, {\n          value: year,\n          key: year\n        }, year);\n      })), __jsx(\"h4\", {\n        className: \"item\"\n      }, \"Rating\"), __jsx(Slider, {\n        className: \"item\",\n        value: this.state.filter.rating,\n        \"aria-labelledby\": \"discrete-slider-small-steps\",\n        step: 0.25,\n        min: 0.00,\n        max: 5.00,\n        onChange: function onChange(e, v) {\n          var filter = _this2.state.filter;\n          filter.rating = v;\n\n          _this2.setState({\n            filter: filter\n          });\n        },\n        valueLabelDisplay: \"auto\"\n      }), __jsx(Grid, {\n        container: true,\n        justify: \"center\",\n        id: \"starPhoto\"\n      }, __jsx(ButtonGroup, {\n        variant: \"text\",\n        className: \"buttonGroup\",\n        color: \"primary\",\n        \"aria-label\": \"text primary button group\"\n      }, __jsx(Button, {\n        onClick: this.onOK\n      }, \"OK\"), __jsx(Button, {\n        onClick: this.onCancel\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return Sort;\n}(Component);\n\nexport default Sort;","map":null,"metadata":{},"sourceType":"module"}