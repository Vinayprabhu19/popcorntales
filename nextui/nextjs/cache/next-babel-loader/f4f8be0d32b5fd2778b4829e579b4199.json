{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\n\nvar toBase64 = function toBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      return reject(error);\n    };\n  });\n};\n\nvar Movie = /*#__PURE__*/function (_Component) {\n  _inherits(Movie, _Component);\n\n  var _super = _createSuper(Movie);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setupBeforeUnloadListener\", function () {\n      window.addEventListener(\"beforeunload\", function (ev) {\n        ev.preventDefault();\n        return ev.returnValue = \"Are you sure you want to close ?\";\n      });\n    });\n\n    _this.state = {\n      imageName: \"\",\n      userId: \"\",\n      password: \"\"\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.onFileChange = _this.onFileChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Activate the event listener\n      this.setupBeforeUnloadListener();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(evt) {\n      if (this.state.imageName == \"\") {\n        alert(\"Image name is empty\");\n        return;\n      }\n\n      var strImage = this.state.image.replace(/^data:image\\/[a-z]+;base64,/, \"\");\n      var data = {\n        imageName: this.state.imageName,\n        image: strImage,\n        imageType: this.state.imageType,\n        userId: this.state.userId,\n        password: this.state.password\n      };\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      var proxyUrl = 'https://fierce-chamber-21718.herokuapp.com/';\n      var url = 'https://api.popcorntales.com/object';\n      fetch(proxyUrl + url, requestOptions).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        alert(data.message);\n        console.log(data);\n      })[\"catch\"](function (error) {\n        alert(error);\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"onFileChange\",\n    value: function () {\n      var _onFileChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n        var file;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                file = document.querySelector('#file').files[0];\n                debugger;\n                _context.t0 = this;\n                _context.next = 5;\n                return toBase64(file);\n\n              case 5:\n                _context.t1 = _context.sent;\n                _context.t2 = file.type;\n                _context.t3 = {\n                  image: _context.t1,\n                  imageType: _context.t2\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t3);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onFileChange(_x) {\n        return _onFileChange.apply(this, arguments);\n      }\n\n      return onFileChange;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"h3\", null, \"Add Image\"), __jsx(FormControl, {\n        component: \"fieldset\",\n        className: \"container\"\n      }, __jsx(FormGroup, null, __jsx(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        onChange: this.onFileChange\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"text\",\n        value: this.state.imageName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            imageName: e.target.value\n          });\n        },\n        label: \"Image Name\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"text\",\n        value: this.state.userId,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            userId: e.target.value\n          });\n        },\n        label: \"User Id\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(TextField, {\n        className: \"smallField\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            password: e.target.value\n          });\n        },\n        label: \"Password\",\n        InputProps: {\n          disableUnderline: true\n        }\n      }), __jsx(Button, {\n        onClick: this.onSubmit\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":null,"metadata":{},"sourceType":"module"}