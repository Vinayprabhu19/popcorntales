{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar LazyImage = /*#__PURE__*/function (_React$Component) {\n  _inherits(LazyImage, _React$Component);\n\n  var _super = _createSuper(LazyImage);\n\n  function LazyImage(props) {\n    var _this;\n\n    _classCallCheck(this, LazyImage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false,\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(LazyImage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var img = new Image();\n\n      img.onload = function () {\n        _this2.setState({\n          loaded: true\n        });\n      };\n\n      img.onerror = function () {\n        _this2.setState({\n          error: true\n        });\n      };\n\n      img.src = this.props.src;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.error) {\n        return __jsx(\"img\", {\n          className: this.props.className,\n          style: this.props.style,\n          src: this.props.unloadedSrc,\n          alt: this.props.alt\n        });\n      } else if (!this.state.loaded) {\n        return __jsx(\"img\", {\n          className: this.props.className,\n          style: this.props.style,\n          src: this.props.unloadedSrc,\n          alt: this.props.alt\n        });\n      }\n\n      return __jsx(\"img\", {\n        className: this.props.className,\n        style: this.props.style,\n        src: this.props.src,\n        alt: this.props.alt\n      });\n    }\n  }]);\n\n  return LazyImage;\n}(React.Component);\n\nexport { LazyImage as default };","map":null,"metadata":{},"sourceType":"module"}