{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport HomeButton from '@material-ui/icons/Home';\nimport Synopsis from '../components/Synopsis';\nimport Review from '../components/Review';\nimport Paper from '@material-ui/core/Paper';\nimport Hidden from '@material-ui/core/Hidden';\nimport Grid from '@material-ui/core/Grid';\nimport Cast from '../components/Cast';\nimport Ticket from '../components/Ticket';\nimport MailIcon from '@material-ui/icons/Mail';\nimport SocialMenu from '../components/SocialMenu';\nimport DetailedRating from '../components/DetailedRating';\nimport Rating from '@material-ui/lab/Rating';\nimport { withStyles } from '@material-ui/core/styles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport LazyImage from \"../components/LazyImage\";\nimport { FacebookShareButton, TelegramShareButton, TwitterShareButton, WhatsappShareButton, FacebookIcon, WhatsappIcon, TelegramIcon, TwitterIcon } from \"react-share\";\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#ff6d75'\n  },\n  iconHover: {\n    color: '#ff3d47'\n  }\n})(Rating);\nexport async function getServerSideProps(context) {\n  var resMovie = await fetch(`https://api.popcorntales.com/movie`);\n  var movies = await resMovie.json();\n  var titles = movies.map(function (a) {\n    return a.title;\n  });\n  var title = context.params.movie;\n\n  if (!titles.includes(title)) {\n    var failureStatus = true;\n\n    if (true) {\n      context.res.writeHead(302, {\n        location: '/'\n      });\n      context.res.end();\n      return {\n        props: {\n          failureStatus\n        }\n      };\n    } else {\n      // On client\n      Router.push('/');\n    }\n\n    return {};\n  }\n\n  const res = await fetch(`https://api.popcorntales.com/moviereview?movie=` + context.params.movie);\n  const movie = await res.json();\n  return {\n    props: {\n      movie\n    }\n  }; //this.props.history.push('/');\n}\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getToolbar\", () => {\n      switch (this.state.selectedTab) {\n        case 0:\n          if (this.state.selectedMovie.review !== undefined) return __jsx(Synopsis, {\n            synopsis: this.state.selectedMovie.review.synopsis\n          });\n          break;\n\n        case 1:\n          if (this.state.selectedMovie.review !== undefined) return __jsx(Review, {\n            review: this.state.selectedMovie.review,\n            title: this.state.selectedMovie.title\n          });\n          break;\n\n        case 2:\n          return __jsx(Cast, {\n            cast: this.state.selectedMovie.cast\n          });\n          break;\n\n        case 3:\n          return __jsx(Ticket, {\n            ticketDetails: this.state.selectedMovie.ticketDetails\n          });\n          break;\n\n        default:\n          {\n            return __jsx(\"p\", null);\n          }\n      }\n    });\n\n    _defineProperty(this, \"hearts\", starCount => {\n      if (starCount == undefined) return;\n      const value = starCount;\n      return __jsx(StyledRating, {\n        name: \"customized-color\",\n        defaultValue: value,\n        precision: 0.1,\n        value: value,\n        icon: __jsx(FavoriteIcon, {\n          fontSize: \"inherit\"\n        })\n      });\n    });\n\n    var result = props.movie;\n    if (typeof result.review == \"string\") result.review = JSON.parse(result.review);\n    if (typeof result.ticketDetails == \"string\") result.ticketDetails = JSON.parse(result.ticketDetails);\n    var movieTitle = result.title;\n\n    if (movieTitle == undefined) {\n      movieTitle = \"Popcorn Tales\";\n    }\n\n    this.state = {\n      loading: true,\n      shareUrl: \"www.popcorntales.com\",\n      tags: \"#popcorntales #movietime #moviereview #popcorn #letswatch\",\n      selectedMovie: result,\n      selectedTab: 0,\n      loading: false,\n      shareUrl: \"www.popcorntales.com/review/\" + movieTitle.replace(/ /g, '%20'),\n      quote: \"I read a review of \" + movieTitle + \" and I feel that it's worth watching. Read the review and let's watch it together!!\"\n    };\n  }\n\n  handleChange(v) {\n    this.setState({\n      selectedTab: v\n    });\n  }\n\n  render() {\n    const toolbar = this.getToolbar();\n    const overallRating = this.hearts(this.state.selectedMovie.rating);\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, this.state.selectedMovie.title + \" Review \" + this.state.selectedMovie.rating + \"/5\"), __jsx(\"meta\", {\n      name: \"description\",\n      content: this.state.selectedMovie.review.synopsis\n    }), __jsx(\"link\", {\n      async: true,\n      rel: \"icon\",\n      type: \"image/x-icon\",\n      href: \"/favicon.ico\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#000000\"\n    }), __jsx(\"link\", {\n      async: true,\n      rel: \"canonical\",\n      href: \"https://www.Popcorntales.com/\"\n    }), __jsx(\"script\", {\n      src: \"https://www.gstatic.com/firebasejs/7.14.3/firebase-app.js\"\n    }), __jsx(\"script\", {\n      src: \"https://www.gstatic.com/firebasejs/7.14.3/firebase-analytics.js\"\n    }), __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n              var firebaseConfig = {\n                apiKey: \"AIzaSyAXuIINLnRmwacxjys3I6ziuSTq8lJ0iw8\",\n                authDomain: \"popcorntales-40767.firebaseapp.com\",\n                databaseURL: \"https://popcorntales-40767.firebaseio.com\",\n                projectId: \"popcorntales-40767\",\n                storageBucket: \"popcorntales-40767.appspot.com\",\n                messagingSenderId: \"512137794051\",\n                appId: \"1:512137794051:web:be612f2d6aa7c368d4b436\",\n                measurementId: \"G-LK5DBSBMTR\"\n              };\n              firebase.initializeApp(firebaseConfig);\n              firebase.analytics(); `\n      }\n    }), \" \"), __jsx(\"div\", null, __jsx(\"div\", {\n      id: \"container\",\n      className: this.state.loading ? 'hidden' : ''\n    }, __jsx(AppBar, {\n      id: \"appBar\",\n      position: \"static\"\n    }, __jsx(Toolbar, {\n      id: \"toolbar\"\n    }, __jsx(\"a\", {\n      href: \"/\"\n    }, __jsx(HomeButton, null)), __jsx(\"h1\", {\n      id: \"title\"\n    }, \"Popcorn Tales\"), __jsx(\"section\", {\n      className: \"rightToolbar\"\n    }, __jsx(SocialMenu, null)))), __jsx(\"div\", {\n      className: \"movie-header\"\n    }, __jsx(\"div\", {\n      id: \"card\"\n    }, __jsx(Paper, {\n      elevation: 19\n    }, __jsx(\"img\", {\n      className: \"card-img\",\n      alt: \"Popcorn Tales \" + this.state.selectedMovie.title + \" Review Image\",\n      src: this.state.selectedMovie.titleImage\n    })), __jsx(Hidden, {\n      smDown: true\n    }, __jsx(Grid, {\n      container: true,\n      justify: \"center\",\n      className: \"ratingHearts\"\n    }, overallRating))), __jsx(Hidden, {\n      mdUp: true\n    }, __jsx(\"div\", {\n      className: \"topHeader\"\n    }, __jsx(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 0,\n      justify: \"center\"\n    }, __jsx(\"h1\", {\n      className: \"headerLevel1 centerAligned\"\n    }, this.state.selectedMovie.title, \" (\", this.state.selectedMovie.year, \")\"), __jsx(DetailedRating, {\n      selectedMovie: this.state.selectedMovie\n    })), __jsx(\"h3\", {\n      className: \"headerLevel2 centerAligned\"\n    }, this.state.selectedMovie.language), __jsx(\"h3\", {\n      className: \"headerLevel2 centerAligned\"\n    }, this.state.selectedMovie.genre.join(\",\")), __jsx(Grid, {\n      container: true,\n      justify: \"center\"\n    }, overallRating))), __jsx(Hidden, {\n      smDown: true\n    }, __jsx(\"div\", {\n      id: \"movie-description\"\n    }, __jsx(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 0,\n      justify: \"center\"\n    }, __jsx(\"h1\", {\n      className: \"headerLevel1 centerAligned\"\n    }, this.state.selectedMovie.title, \" (\", this.state.selectedMovie.year, \")\"), __jsx(DetailedRating, {\n      selectedMovie: this.state.selectedMovie\n    })), __jsx(\"h2\", {\n      className: \"headerLevel2\"\n    }, this.state.selectedMovie.language), __jsx(\"h3\", {\n      className: \"headerLevel2\"\n    }, this.state.selectedMovie.genre.join(\",\")), __jsx(\"h3\", {\n      className: \"headerLevel2\"\n    }, this.state.selectedMovie.rating, \"/5\"), __jsx(\"div\", {\n      className: \"icon-container\"\n    }, __jsx(TwitterShareButton, {\n      url: this.state.shareUrl,\n      quote: this.state.quote,\n      className: \"social-media-icon\"\n    }, __jsx(TwitterIcon, {\n      size: 28,\n      round: true\n    })), __jsx(FacebookShareButton, {\n      url: this.state.shareUrl,\n      title: this.state.quote,\n      hashtag: this.state.tags,\n      className: \"social-media-icon\"\n    }, __jsx(FacebookIcon, {\n      size: 28,\n      round: true\n    })), __jsx(WhatsappShareButton, {\n      url: this.state.shareUrl,\n      title: this.state.quote,\n      className: \"social-media-icon\"\n    }, __jsx(WhatsappIcon, {\n      size: 28,\n      round: true\n    })), __jsx(TelegramShareButton, {\n      url: this.state.shareUrl,\n      title: this.state.quote,\n      className: \"social-media-icon\"\n    }, __jsx(TelegramIcon, {\n      size: 28,\n      round: true\n    }))))), __jsx(Hidden, {\n      mdDown: true\n    }, __jsx(\"div\", {\n      id: \"trailer_div\"\n    }, __jsx(\"iframe\", {\n      id: \"trailer\",\n      title: this.state.selectedMovie,\n      src: this.state.selectedMovie.trailer,\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n    })))), __jsx(\"div\", {\n      className: \"movie-detail\"\n    }, __jsx(Paper, {\n      elevation: 8\n    }, __jsx(AppBar, {\n      position: \"static\"\n    }, __jsx(Tabs, {\n      onChange: (e, v) => {\n        this.handleChange(v);\n      },\n      value: this.state.selectedTab,\n      variant: \"fullWidth\",\n      \"aria-label\": \"simple tabs example\"\n    }, __jsx(Tab, {\n      value: 0,\n      label: \"Review\",\n      className: \"tab\"\n    }), __jsx(Tab, {\n      value: 1,\n      label: \"Hit & Miss\",\n      className: \"tab\"\n    }), __jsx(Tab, {\n      value: 2,\n      label: \"Cast & Crew\",\n      className: \"tab\"\n    }), __jsx(Tab, {\n      value: 3,\n      label: \"Ticket\",\n      className: \"tab\"\n    })))), __jsx(\"div\", null, toolbar)), __jsx(\"footer\", null, __jsx(\"div\", {\n      id: \"footerText\"\n    }, __jsx(Hidden, {\n      smUp: true\n    }, __jsx(Grid, {\n      container: true,\n      justify: \"center\",\n      className: \"icon-container\"\n    }, __jsx(TwitterShareButton, {\n      url: this.state.shareUrl,\n      title: this.state.quote,\n      className: \"social-media-icon\"\n    }, __jsx(TwitterIcon, {\n      size: 25,\n      round: true\n    })), __jsx(FacebookShareButton, {\n      url: this.state.shareUrl,\n      quote: this.state.quote,\n      hashtag: this.state.tags,\n      className: \"social-media-icon\"\n    }, __jsx(FacebookIcon, {\n      size: 25,\n      round: true\n    })), __jsx(WhatsappShareButton, {\n      url: this.state.shareUrl,\n      title: this.state.quote,\n      className: \"social-media-icon\"\n    }, __jsx(WhatsappIcon, {\n      size: 25,\n      round: true\n    })), __jsx(TelegramShareButton, {\n      url: this.state.shareUrl,\n      title: this.state.quote,\n      className: \"social-media-icon\"\n    }, __jsx(TelegramIcon, {\n      size: 25,\n      round: true\n    })))), __jsx(Grid, {\n      container: true,\n      justify: \"center\",\n      id: \"footerText\"\n    }, __jsx(\"h4\", {\n      id: \"feedbackText\"\n    }, \"Need your feedback to improve  \"), __jsx(\"a\", {\n      href: \"mailto:popcorntales19@gmail.com\"\n    }, \" \", __jsx(MailIcon, null))))))));\n  }\n\n}\n\nexport default Detail;","map":null,"metadata":{},"sourceType":"module"}